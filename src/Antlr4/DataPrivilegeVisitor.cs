//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from DataPrivilege.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="DataPrivilegeParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IDataPrivilegeVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonOperator([NotNull] DataPrivilegeParser.ComparisonOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] DataPrivilegeParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] DataPrivilegeParser.ExpressionListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.columnElem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColumnElem([NotNull] DataPrivilegeParser.ColumnElemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.simpleSubquery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleSubquery([NotNull] DataPrivilegeParser.SimpleSubqueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.tableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableName([NotNull] DataPrivilegeParser.TableNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.searchConditionAnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSearchConditionAnd([NotNull] DataPrivilegeParser.SearchConditionAndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.searchConditionNot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSearchConditionNot([NotNull] DataPrivilegeParser.SearchConditionNotContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.searchCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSearchCondition([NotNull] DataPrivilegeParser.SearchConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.customField"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCustomField([NotNull] DataPrivilegeParser.CustomFieldContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.numericExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericExpression([NotNull] DataPrivilegeParser.NumericExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.stringExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringExpression([NotNull] DataPrivilegeParser.StringExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.nullExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullExpression([NotNull] DataPrivilegeParser.NullExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantExpression([NotNull] DataPrivilegeParser.ConstantExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.getDateExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGetDateExpression([NotNull] DataPrivilegeParser.GetDateExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.existsExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExistsExpression([NotNull] DataPrivilegeParser.ExistsExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.comparisonExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonExpression([NotNull] DataPrivilegeParser.ComparisonExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.betweenAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBetweenAndExpression([NotNull] DataPrivilegeParser.BetweenAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.inExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInExpression([NotNull] DataPrivilegeParser.InExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.likeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLikeExpression([NotNull] DataPrivilegeParser.LikeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.isNullExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsNullExpression([NotNull] DataPrivilegeParser.IsNullExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DataPrivilegeParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredicate([NotNull] DataPrivilegeParser.PredicateContext context);
}
